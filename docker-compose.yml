version: '3'
services:
  postgres:
    container_name: postgres_users_db
    image: postgres:15.0-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 794613825Zx!
    volumes:
      - pg_data_users:/var/lib/postgresql/data

  redis:
    container_name: redis_users
    restart: always
    image: redis:alpine
    ports:
      - "6379:6379"

  backend:
    container_name: backend
    image: "jmurv/users_svc:latest"
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "50075:50075"
    expose:
      - "50075"
    depends_on:
      - postgres
      - redis
    command: sh -c "cd cmd && go run ."

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    restart: always

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: always

  node-exp:
    container_name: node-exp
    image: prom/node-exporter
    ports:
      - "9100:9100"
    restart: always

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: always

  kafka:
    container_name: kafka
    image: apache/kafka:3.7.0
    ports:
      - "9092:9092"
    restart: always

volumes:
  pg_data_users:
  prometheus-data:
  grafana-data: